"use strict";(self.webpackChunkscaffold=self.webpackChunkscaffold||[]).push([[8687],{6957:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"api-documentation/v1/data-api/expiry","title":"Expiry","description":"The Expiry API allows you to retrieve expiry dates for F\\\\&O (Futures and Options) instruments for a given underlying symbol. This API helps you get all available expiry dates for futures or options contracts of a specific underlying asset.","source":"@site/docs/api-documentation/v1/data-api/expiry.md","sourceDirName":"api-documentation/v1/data-api","slug":"/api-documentation/v1/data-api/expiry","permalink":"/docs/api-documentation/v1/data-api/expiry","draft":false,"unlisted":false,"editUrl":"https://github.com/layrZero/layrZero.github.io/tree/main/docs/api-documentation/v1/data-api/expiry.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Depth","permalink":"/docs/api-documentation/v1/data-api/depth"},"next":{"title":"History","permalink":"/docs/api-documentation/v1/data-api/history"}}');var t=s(4848),i=s(8453);const d={},l="Expiry",a={},c=[{value:"Endpoint",id:"endpoint",level:3},{value:"Request Format",id:"request-format",level:3},{value:"Headers",id:"headers",level:4},{value:"Body Parameters",id:"body-parameters",level:4},{value:"Supported Exchanges and Instruments",id:"supported-exchanges-and-instruments",level:4},{value:"Request and Response Examples",id:"request-and-response-examples",level:3},{value:"NIFTY Futures (NFO)",id:"nifty-futures-nfo",level:4},{value:"NIFTY Options (NFO)",id:"nifty-options-nfo",level:4},{value:"GOLD Futures (MCX)",id:"gold-futures-mcx",level:4},{value:"USDINR Futures (CDS)",id:"usdinr-futures-cds",level:4},{value:"Error Response",id:"error-response",level:4},{value:"Response Fields",id:"response-fields",level:3},{value:"Error Codes",id:"error-codes",level:3},{value:"Error Messages",id:"error-messages",level:3},{value:"Notes",id:"notes",level:3},{value:"Rate Limits",id:"rate-limits",level:3},{value:"Common Use Cases",id:"common-use-cases",level:3},{value:"Integration Tips",id:"integration-tips",level:3}];function o(e){const n={code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"expiry",children:"Expiry"})}),"\n",(0,t.jsx)(n.p,{children:"The Expiry API allows you to retrieve expiry dates for F&O (Futures and Options) instruments for a given underlying symbol. This API helps you get all available expiry dates for futures or options contracts of a specific underlying asset."}),"\n",(0,t.jsx)(n.h3,{id:"endpoint",children:"Endpoint"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Local Host   :  POST http://127.0.0.1:5000/api/v1/expiry\nNgrok Domain :  POST https://<your-ngrok-domain>.ngrok-free.app/api/v1/expiry\nCustom Domain:  POST https://<your-custom-domain>/api/v1/expiry\n"})}),"\n",(0,t.jsx)(n.h3,{id:"request-format",children:"Request Format"}),"\n",(0,t.jsx)(n.h4,{id:"headers",children:"Headers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Content-Type: application/json"})}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"body-parameters",children:"Body Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"apikey"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Your OpenAlgo API key for authentication"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"symbol"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Underlying symbol (e.g., NIFTY, BANKNIFTY, RELIANCE)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"exchange"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Exchange code (NFO, BFO, MCX, CDS)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"instrumenttype"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:'Type of instrument - "futures" or "options"'})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"supported-exchanges-and-instruments",children:"Supported Exchanges and Instruments"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Exchange"}),(0,t.jsx)(n.th,{children:"Futures"}),(0,t.jsx)(n.th,{children:"Options"}),(0,t.jsx)(n.th,{children:"Examples"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"NFO"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"NIFTY, BANKNIFTY, RELIANCE"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"BFO"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"SENSEX, BANKEX"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"MCX"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"GOLD, SILVER, CRUDEOIL"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"CDS"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"USDINR, EURINR"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"request-and-response-examples",children:"Request and Response Examples"}),"\n",(0,t.jsx)(n.h4,{id:"nifty-futures-nfo",children:"NIFTY Futures (NFO)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Request:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "apikey": "openalgo-api-key",\n    "symbol": "NIFTY",\n    "exchange": "NFO",\n    "instrumenttype": "futures"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "data": [\n        "31-JUL-25",\n        "28-AUG-25",\n        "25-SEP-25"\n    ],\n    "message": "Found 3 expiry dates for NIFTY futures in NFO",\n    "status": "success"\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"nifty-options-nfo",children:"NIFTY Options (NFO)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Request:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "apikey": "openalgo-api-key",\n    "symbol": "NIFTY",\n    "exchange": "NFO",\n    "instrumenttype": "options"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "data": [\n        "10-JUL-25",\n        "17-JUL-25",\n        "24-JUL-25",\n        "31-JUL-25",\n        "07-AUG-25",\n        "28-AUG-25",\n        "25-SEP-25",\n        "24-DEC-25",\n        "26-MAR-26",\n        "25-JUN-26",\n        "31-DEC-26",\n        "24-JUN-27",\n        "30-DEC-27",\n        "29-JUN-28",\n        "28-DEC-28",\n        "28-JUN-29",\n        "27-DEC-29",\n        "25-JUN-30"\n    ],\n    "message": "Found 18 expiry dates for NIFTY options in NFO",\n    "status": "success"\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"gold-futures-mcx",children:"GOLD Futures (MCX)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Request:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "apikey": "openalgo-api-key",\n    "symbol": "GOLD",\n    "exchange": "MCX",\n    "instrumenttype": "futures"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "data": [\n        "05-AUG-25",\n        "03-OCT-25",\n        "05-DEC-25",\n        "05-FEB-26",\n        "02-APR-26",\n        "05-JUN-26"\n    ],\n    "message": "Found 6 expiry dates for GOLD futures in MCX",\n    "status": "success"\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"usdinr-futures-cds",children:"USDINR Futures (CDS)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Request:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "apikey": "openalgo-api-key",\n    "symbol": "USDINR",\n    "exchange": "CDS",\n    "instrumenttype": "futures"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "data": [\n        "11-JUL-25",\n        "18-JUL-25",\n        "25-JUL-25",\n        "29-JUL-25",\n        "01-AUG-25",\n        "08-AUG-25",\n        "14-AUG-25",\n        "22-AUG-25",\n        "26-AUG-25",\n        "29-AUG-25",\n        "04-SEP-25",\n        "12-SEP-25",\n        "19-SEP-25",\n        "26-SEP-25",\n        "29-OCT-25",\n        "26-NOV-25",\n        "29-DEC-25",\n        "28-JAN-26",\n        "25-FEB-26",\n        "27-MAR-26",\n        "28-APR-26",\n        "27-MAY-26",\n        "26-JUN-26"\n    ],\n    "message": "Found 23 expiry dates for USDINR futures in CDS",\n    "status": "success"\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"error-response",children:"Error Response"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "status": "error",\n    "message": "Invalid openalgo apikey"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"response-fields",children:"Response Fields"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Field"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"status"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:'Response status: "success" or "error"'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"message"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Descriptive message about the response"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"data"})}),(0,t.jsx)(n.td,{children:"array"}),(0,t.jsx)(n.td,{children:"Array of expiry dates in DD-MMM-YY format, sorted chronologically"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"error-codes",children:"Error Codes"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"HTTP Status"}),(0,t.jsx)(n.th,{children:"Error Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"200"}),(0,t.jsx)(n.td,{children:"Success"}),(0,t.jsx)(n.td,{children:"Request processed successfully"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"400"}),(0,t.jsx)(n.td,{children:"Bad Request"}),(0,t.jsx)(n.td,{children:"Invalid request parameters"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"403"}),(0,t.jsx)(n.td,{children:"Forbidden"}),(0,t.jsx)(n.td,{children:"Invalid API key"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"500"}),(0,t.jsx)(n.td,{children:"Server Error"}),(0,t.jsx)(n.td,{children:"Internal server error"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"error-messages",children:"Error Messages"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Message"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:'"Invalid openalgo apikey"'}),(0,t.jsx)(n.td,{children:"The provided API key is invalid"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:'"Symbol parameter is required and cannot be empty"'}),(0,t.jsx)(n.td,{children:"Symbol field is missing or empty"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:'"Exchange parameter is required and cannot be empty"'}),(0,t.jsx)(n.td,{children:"Exchange field is missing or empty"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:'"Instrumenttype parameter is required and cannot be empty"'}),(0,t.jsx)(n.td,{children:"Instrumenttype field is missing or empty"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\"Instrumenttype must be either 'futures' or 'options'\""}),(0,t.jsx)(n.td,{children:"Invalid instrumenttype value"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:'"Exchange must be one of: NFO, BFO, MCX, CDS"'}),(0,t.jsx)(n.td,{children:"Invalid exchange value"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:'"No expiry dates found for [symbol] [instrumenttype] in [exchange]"'}),(0,t.jsx)(n.td,{children:"No matching expiry dates found"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"notes",children:"Notes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Expiry dates are returned in DD-MMM-YY format (e.g., "31-JUL-25")'}),"\n",(0,t.jsx)(n.li,{children:"Dates are sorted chronologically from earliest to latest"}),"\n",(0,t.jsx)(n.li,{children:'The API uses exact symbol matching to avoid confusion (e.g., "NIFTY" won\'t match "BANKNIFTY")'}),"\n",(0,t.jsx)(n.li,{children:'Different exchanges use different instrument type codes internally but the API accepts standardized "futures" and "options" parameters'}),"\n",(0,t.jsx)(n.li,{children:"Rate limiting is applied as per your OpenAlgo server configuration"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"rate-limits",children:"Rate Limits"}),"\n",(0,t.jsx)(n.p,{children:"This API endpoint is subject to rate limiting. The default rate limit is 10 requests per second per API key, but this may vary based on your OpenAlgo server configuration."}),"\n",(0,t.jsx)(n.h3,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Options Strategy Planning"}),": Get all available expiry dates for options to plan multi-leg strategies"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Futures Trading"}),": Identify available futures contracts for different expiry months"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Calendar Spreads"}),": Find suitable expiry dates for calendar spread strategies"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"integration-tips",children:"Integration Tips"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Cache the expiry dates locally to reduce API calls"}),"\n",(0,t.jsx)(n.li,{children:"Filter expiry dates based on your trading strategy requirements"}),"\n",(0,t.jsx)(n.li,{children:"Consider time to expiry when selecting contracts"}),"\n",(0,t.jsx)(n.li,{children:"Use the chronologically sorted expiry dates for time-based analysis"}),"\n",(0,t.jsx)(n.li,{children:"Validate the symbol format according to OpenAlgo symbol conventions before making API calls"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>l});var r=s(6540);const t={},i=r.createContext(t);function d(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);