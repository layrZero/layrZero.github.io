"use strict";(self.webpackChunkscaffold=self.webpackChunkscaffold||[]).push([[7751],{4218:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"trading-platform/amibroker/time-based-execution","title":"Time Based Execution","description":"","source":"@site/docs/trading-platform/amibroker/time-based-execution.md","sourceDirName":"trading-platform/amibroker","slug":"/trading-platform/amibroker/time-based-execution","permalink":"/docs/trading-platform/amibroker/time-based-execution","draft":false,"unlisted":false,"editUrl":"https://github.com/layrZero/layrZero.github.io/tree/main/docs/trading-platform/amibroker/time-based-execution.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Spot/Futures to Options Module (Two Leg)","permalink":"/docs/trading-platform/amibroker/spot-futures-to-options-module-two-leg"},"next":{"title":"Trailing Stoploss Execution Module","permalink":"/docs/trading-platform/amibroker/trailing-stoploss-execution-module"}}');var r=n(4848),i=n(8453);const o={},s="Time Based Execution",l={},c=[];function m(t){const e={code:"code",h1:"h1",header:"header",pre:"pre",...(0,i.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"time-based-execution",children:"Time Based Execution"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'\n//Rajandran R - Creator of OpenAlgo\n//website - openalgo.in / marketcalls.in\n//OpenAlgo - Amibroker TimeBased Execution Module v1.0\n//Date - 23/08/2024\n\n\n_SECTION_BEGIN("OpenAlgo Trading Controls");\n\nRequestTimedRefresh(0.1,False);\nEnableTextOutput(False);\n\napikey = ParamStr("OpenAlgo API Key", "******");\nstrategy = ParamStr("Strategy", "Amibroker");\nsymbol = ParamStr("Symbol", "YESBANK");\nexchange = ParamList("Exchange", "NSE|NFO|BSE|MCX|CDS");\npricetype = ParamStr("Price Type", "MARKET");\nproduct = ParamList("Product", "MIS|NRML|CNC");\nquantity = Param("Quantity", 1,1,1000,1);\n\nentrytime = ParamTime("Entry Time","19:50:00");\nexittime = ParamTime("Exit Time","19:51:00");\n\n\n\nhost = ParamStr("host","http://127.0.0.1:5000");\nver = ParamStr("API Version","v1");\n\nVoiceAlert = ParamList("Voice Alert","Disable|Enable",1);\n\n\nEnableAlgo = ParamList("AlgoStatus","Disable|Enable",0);\n\n\nbridgeurl = host+"/api/"+ver;\nresp = "";\n\nstatic_name_ = Name()+GetChartID()+interval(2)+strategy;\nstatic_name_algo = static_name_+interval(2)+strategy+"algostatus";\n\n\nprintf("\\n-----------Current Time-----------");\nprintf("\\nThe time is "+Now(4));\n\nprintf("\\n\\n\\n-----------Internal Memory-----------");\nprintf("\\nEntry Time :"+entrytime);\nprintf("\\nEntry Time Enabled :"+StaticVarGet(static_name_+"EntryTime"));\nprintf("\\nExit Time :"+exittime);\nprintf("\\nExit Time Enabled :"+StaticVarGet(static_name_+"EXitTime"));\n\n\n//OpenAlgo Dashboard\n\nGfxSelectFont( "BOOK ANTIQUA", 14, 100 );\nGfxSetBkMode( 1 );\nif(EnableAlgo == "Enable")\n{\nAlgoStatus = "Algo Enabled";\nGfxSetTextColor( colorGreen ); \nGfxTextOut( "Algostatus : "+AlgoStatus , 20, 40); \nif(Nz(StaticVarGet(static_name_algo),0)!=1)\n{\n_TRACE("Algo Status : Enabled");\nStaticVarSet(static_name_algo, 1);\n}\n}\nif(EnableAlgo == "Disable")\n{\nAlgoStatus = "Algo Disabled";\nGfxSetTextColor( colorRed ); \nGfxTextOut( "Algostatus : "+AlgoStatus , 20, 40); \nif(Nz(StaticVarGet(static_name_algo),0)!=0)\n{\n_TRACE("Algo Status : Disabled");\nStaticVarSet(static_name_algo, 0);\n}\n}\n\n\n\n_SECTION_BEGIN("OpenAlgo Bridge Controls");\n\nEnableScript("VBScript"); \n<%\nPublic Sub PlaceOrder(action, quantity)\n    Dim oXMLHTTP\n    Dim oStream\n    Set oXMLHTTP = CreateObject("Msxml2.XMLHTTP")\n    \' Define variables with the specified values\n    Dim apikey, strategy, symbol , exchange, pricetype, product\n    apikey = AFL.Var("apikey")\n    strategy = AFL.Var("strategy")\n    symbol = AFL.Var("symbol")\n    exchange = AFL.Var("exchange")\n    pricetype = AFL.Var("pricetype")\n    product = AFL.Var("product")\n   \n    \n    \' Construct the JSON string for the POST message\n    Dim jsonRequestBody\n    jsonRequestBody = "{""apikey"":""" & apikey & _\n    """,""strategy"":""" & strategy & _\n    """,""symbol"":""" & symbol & _\n    """,""action"":""" & action & _\n    """,""exchange"":""" & exchange & _\n    """,""pricetype"":""" & pricetype & _\n    """,""product"":""" & product & _\n    """,""quantity"":""" & quantity & """}"\n    \n    \' Set the URL\n    Dim url\n    url = AFL.Var("bridgeurl")&"/placeorder"\n    \n    \' Configure the HTTP request for POST method\n    oXMLHTTP.Open "POST", url, False\n    oXMLHTTP.setRequestHeader "Content-Type", "application/json"\n    oXMLHTTP.setRequestHeader "Cache-Control", "no-cache"\n    oXMLHTTP.setRequestHeader "Pragma", "no-cache"\n    \n    \' Send the request with the JSON body\n    oXMLHTTP.Send jsonRequestBody\n    \n    api_parameters = "Strategy :" & strategy & " Symbol :" & symbol & " Exchange :" & exchange & _\n                 " Action :" & action & " Pricetype :" & pricetype & _\n                 " Product :" & product & " Quantity:" & quantity & _\n                 " api_url :" & url\n\n    \n    AFL("api_request") = api_parameters  \n    AFL("api_response") = oXMLHTTP.responseText\n    \n    \n    \' Optionally, handle the response here\n    \' Dim response\n    \' response = oXMLHTTP.responseText\n    \' Response handling code...\nEnd Sub\n\n%>\n\nopenalgo = GetScriptObject();\n\nif(EnableAlgo != "Disable")\n\t{\n\t\n\t\t\n\t\tif( Now(4)>=entrytime AND Nz(StaticVarGet(static_name_+"EntryTime"))==0 ) \n\t\t\t{\n\t\t\t\topenalgo.placeorder("BUY",quantity);\n\t\t\t\tif(VoiceAlert == "Enable"){\n\t\t\t\t\t\tSay("Buy Order Triggered");  \t\n\t\t\t\t\t}\n\t\t\t\t_TRACE("API Request : "+api_request);\n\t\t\t\t_TRACE("API Response : "+api_response);\n\t\t\t\t\n\t\t\t\tStaticVarSet(static_name_+"EntryTime",1); \n\t\t\t}\n\t\telse if(Now(4)<entrytime)\n\t\t\t{\n\t\t\t\tStaticVarSet(static_name_+"EntryTime",0); \n\t\t\t}\n\t\t\t\n\t\tif( Now(4)>=exittime AND Nz(StaticVarGet(static_name_+"ExitTime"))==0 ) \n\t\t\t{\n\t\t\t\topenalgo.placeorder("SELL",quantity);\n\t\t\t\tif(VoiceAlert == "Enable"){\n\t\t\t\t\t\tSay("Sell Order Triggered");  \t\n\t\t\t\t\t}\n\t\t\t\t_TRACE("API Request : "+api_request);\n\t\t\t\t_TRACE("API Response : "+api_response);\n\t\t\t\t\n\t\t\t\tStaticVarSet(static_name_+"ExitTime",1); \n\t\t\t}\n\t\telse if(Now(4)<exittime)\n\t\t\t{\n\t\t\t\tStaticVarSet(static_name_+"ExitTime",0); \n\t\t\t}\n\t\t\t\n\t}\n\t\n_SECTION_END();\n\t\t\t\n\t\t\t\n_SECTION_BEGIN("Candlestick Charts with Date & Time Axis");\n\n//Enable the Date & Time Axis\nSetChartOptions(0, chartShowArrows | chartShowDates);\n\n//Plotting Candlestick charts\nPlot(Close,"Candle",colorDefault,styleCandle);\n\n\n_SECTION_END();\t\n'})})]})}function p(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(m,{...t})}):m(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>o,x:()=>s});var a=n(6540);const r={},i=a.createContext(r);function o(t){const e=a.useContext(i);return a.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:o(t.components),a.createElement(i.Provider,{value:e},t.children)}}}]);