"use strict";(self.webpackChunkscaffold=self.webpackChunkscaffold||[]).push([[9794],{8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var o=t(6540);const r={},s=o.createContext(r);function i(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:n},e.children)}},9226:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/image (110)-e0b0b494ff0b250cc4b01feee58fd63c.png"},9768:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"why-to-build-with-Layr0","title":"Why to Build with Layr0?","description":"\u201cWhy should I use OpenAlgo when I can just build my strategy directly on top of the broker\u2019s SDK or API?\u201d","source":"@site/docs/why-to-build-with-Layr0.md","sourceDirName":".","slug":"/why-to-build-with-Layr0","permalink":"/docs/why-to-build-with-Layr0","draft":false,"unlisted":false,"editUrl":"https://github.com/layrZero/layrZero.github.io/tree/main/docs/why-to-build-with-Layr0.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","next":{"title":"What is OpenAlgo?","permalink":"/docs/"}}');var r=t(4848),s=t(8453);const i={sidebar_position:4},l="Why to Build with Layr0?",a={},d=[{value:"What Makes OpenAlgo Different?",id:"what-makes-openalgo-different",level:3},{value:"Strategy Management Engine",id:"strategy-management-engine",level:4},{value:"Real-Time Quote Layer (Common WebSockets)",id:"real-time-quote-layer-common-websockets",level:4},{value:"Unified Symbol System",id:"unified-symbol-system",level:4},{value:"Broker-Agnostic API Layer",id:"broker-agnostic-api-layer",level:4},{value:"Speed, Stability, and Control",id:"speed-stability-and-control",level:3},{value:"Deployment Comes Secure by Default",id:"deployment-comes-secure-by-default",level:3},{value:"Why Not Just Use Broker APIs Directly?",id:"why-not-just-use-broker-apis-directly",level:3},{value:"Open Source That Gives You Real Freedom",id:"open-source-that-gives-you-real-freedom",level:3},{value:"Final Thoughts",id:"final-thoughts",level:3}];function c(e){const n={br:"br",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"why-to-build-with-layr0",children:"Why to Build with Layr0?"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"\u201cWhy should I use OpenAlgo when I can just build my strategy directly on top of the broker\u2019s SDK or API?\u201d"})}),"\n",(0,r.jsx)(n.p,{children:"If you\u2019ve been asking this, you're not alone. Many developers and traders start with direct broker APIs, thinking it\u2019s the fastest way to automate trades. And sure\u2014it works. But then the real issues show up:"}),"\n",(0,r.jsxs)(n.p,{children:["How do you monitor trades live?",(0,r.jsx)(n.br,{}),"\n","Where do you store logs?",(0,r.jsx)(n.br,{}),"\n","How do you test webhooks before going live?",(0,r.jsx)(n.br,{}),"\n","How do you fetch and store historical candles?",(0,r.jsx)(n.br,{}),"\n","What if you want to migrate your strategy from Broker A to Broker B?"]}),"\n",(0,r.jsx)(n.p,{children:"That\u2019s when most realize the broker SDK is just the starting point\u2014not the solution."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"OpenAlgo is built to handle all that overhead for you."})," It\u2019s a full-stack automation framework, not just an API wrapper. And it\u2019s fully ",(0,r.jsx)(n.strong,{children:"open source under the AGPL license"}),", meaning you have the freedom to modify, deploy, and self-host without vendor lock-in or commercial restriction."]}),"\n",(0,r.jsx)("img",{src:t(9226).A,alt:"Example banner"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"what-makes-openalgo-different",children:"What Makes OpenAlgo Different?"}),"\n",(0,r.jsx)(n.h4,{id:"strategy-management-engine",children:"Strategy Management Engine"}),"\n",(0,r.jsx)(n.p,{children:"Define, activate, pause, and monitor strategies\u2014whether they come from Python, TradingView, Amibroker, Excel, N8N, or Chartink. All strategies run through a centralized interface, complete with logs, execution metrics, and security enforcement."}),"\n",(0,r.jsx)(n.h4,{id:"real-time-quote-layer-common-websockets",children:"Real-Time Quote Layer (Common WebSockets)"}),"\n",(0,r.jsxs)(n.p,{children:["Instead of rewriting code for each broker\u2019s WebSocket implementation, OpenAlgo offers a ",(0,r.jsx)(n.strong,{children:"Common WebSocket layer"}),". One interface, multiple brokers\u2014streaming normalized market data, ready for use by your strategies."]}),"\n",(0,r.jsx)(n.h4,{id:"unified-symbol-system",children:"Unified Symbol System"}),"\n",(0,r.jsxs)(n.p,{children:["OpenAlgo maintains a ",(0,r.jsx)(n.strong,{children:"Common Symbol Format"}),", so a strategy written using one broker\u2019s symbol conventions will continue to work with others\u2014no tedious renaming or mapping required. Whether it's NSE, BSE, or MCX, symbol translation is handled internally."]}),"\n",(0,r.jsx)(n.h4,{id:"broker-agnostic-api-layer",children:"Broker-Agnostic API Layer"}),"\n",(0,r.jsxs)(n.p,{children:["All REST APIs for placing orders, fetching positions, or getting quotes are ",(0,r.jsx)(n.strong,{children:"broker-agnostic"}),". That means the same API call works whether you're using Zerodha, AngelOne, Dhan, Upstox, or others. Build once, deploy across brokers with minimal change."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"speed-stability-and-control",children:"Speed, Stability, and Control"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HTTP Connection Pooling"})," is baked into OpenAlgo's broker interfaces. This drops your order latency to ",(0,r.jsx)(n.strong,{children:"50ms\u2013120ms"}),", compared to ",(0,r.jsx)(n.strong,{children:"150ms\u2013250ms"})," if you hit broker APIs directly via standalone scripts."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Historify"})," module manages all your historical data download needs: 1-minute bars, EOD data, and master contract management are scheduled and stored automatically\u2014no scripts required."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API Analyzer"})," acts as a local sandbox to simulate trades and strategy inputs without sending real orders\u2014perfect for debugging signals."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"deployment-comes-secure-by-default",children:"Deployment Comes Secure by Default"}),"\n",(0,r.jsx)(n.p,{children:"OpenAlgo ships with strong default protections:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cross-Origin Resource Sharing (CORS) rules"}),"\n",(0,r.jsx)(n.li,{children:"Content Security Policy (CSP) headers"}),"\n",(0,r.jsx)(n.li,{children:"CSRF protection on state-changing routes"}),"\n",(0,r.jsx)(n.li,{children:"Endpoint rate limiting"}),"\n",(0,r.jsx)(n.li,{children:"Session management and audit trail logs"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"You can host it locally, on a VPS, or inside a secured cloud environment without manually configuring each of these layers."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"why-not-just-use-broker-apis-directly",children:"Why Not Just Use Broker APIs Directly?"}),"\n",(0,r.jsx)(n.p,{children:"You certainly can. But here\u2019s what you\u2019d likely need to build on your own:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Symbol mapping and contract management"}),"\n",(0,r.jsx)(n.li,{children:"Connection pooling logic"}),"\n",(0,r.jsx)(n.li,{children:"Live logs and execution dashboards"}),"\n",(0,r.jsx)(n.li,{children:"Quote stream normalization"}),"\n",(0,r.jsx)(n.li,{children:"Strategy lifecycle control"}),"\n",(0,r.jsx)(n.li,{children:"Reusable REST and WebSocket abstractions"}),"\n",(0,r.jsx)(n.li,{children:"Testing tools for signal simulation"}),"\n",(0,r.jsx)(n.li,{children:"Historical data download and storage"}),"\n",(0,r.jsx)(n.li,{children:"Monitoring, recon, and logging infrastructure"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["OpenAlgo gives you all of this\u2014",(0,r.jsx)(n.strong,{children:"pre-wired, tested, documented"}),", and ready to use."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"open-source-that-gives-you-real-freedom",children:"Open Source That Gives You Real Freedom"}),"\n",(0,r.jsxs)(n.p,{children:["OpenAlgo is licensed under ",(0,r.jsx)(n.strong,{children:"AGPL"}),", which means:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"You can self-host and modify everything"}),"\n",(0,r.jsx)(n.li,{children:"You can build commercial systems on top of it (with license compliance)"}),"\n",(0,r.jsx)(n.li,{children:"No per-order fees, no monthly licenses, no black-box lock-in"}),"\n",(0,r.jsx)(n.li,{children:"Full access to the source code, strategy engine, and integration layers"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"You\u2019re not just running a script\u2014you\u2019re running an infrastructure designed to scale with your trading ideas."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"final-thoughts",children:"Final Thoughts"}),"\n",(0,r.jsxs)(n.p,{children:["If you're building your own trading system, don't just look at what a broker's API ",(0,r.jsx)(n.em,{children:"can"})," do. Look at what it ",(0,r.jsx)(n.em,{children:"doesn\u2019t"})," do."]}),"\n",(0,r.jsxs)(n.p,{children:["OpenAlgo doesn\u2019t replace your strategy logic\u2014it ",(0,r.jsx)(n.strong,{children:"amplifies it"})," with the tools needed to operate, monitor, test, and deploy with confidence."]}),"\n",(0,r.jsxs)(n.p,{children:["And when the day comes that you want to switch brokers or scale across multiple ones, you\u2019ll be glad your system was built on ",(0,r.jsx)(n.strong,{children:"OpenAlgo\u2019s broker-agnostic foundation"}),"."]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);