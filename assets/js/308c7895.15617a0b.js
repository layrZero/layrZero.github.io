"use strict";(self.webpackChunkscaffold=self.webpackChunkscaffold||[]).push([[9890],{3676:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"trading-platform/google-spreadsheets","title":"Google Spreadsheets","description":"Quick Start Guide","source":"@site/docs/trading-platform/google-spreadsheets.md","sourceDirName":"trading-platform","slug":"/trading-platform/google-spreadsheets","permalink":"/docs/trading-platform/google-spreadsheets","draft":false,"unlisted":false,"editUrl":"https://github.com/layrZero/layrZero.github.io/tree/main/docs/trading-platform/google-spreadsheets.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Excel","permalink":"/docs/trading-platform/excel"},"next":{"title":"Metatrader 5","permalink":"/docs/trading-platform/metatrader-5/"}}');var s=t(4848),i=t(8453);const o={},l="Google Spreadsheets",a={},d=[{value:"Quick Start Guide",id:"quick-start-guide",level:3},{value:"Step 1: Clone the Template Spreadsheet",id:"step-1-clone-the-template-spreadsheet",level:4},{value:"Step 2: Configure API Settings",id:"step-2-configure-api-settings",level:4},{value:"Spreadsheet Structure",id:"spreadsheet-structure",level:4},{value:"Split Order Functionality",id:"split-order-functionality",level:4},{value:"Execution",id:"execution",level:4},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Common Issues",id:"common-issues",level:4},{value:"Security Notes",id:"security-notes",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"google-spreadsheets",children:"Google Spreadsheets"})}),"\n",(0,s.jsx)(n.h3,{id:"quick-start-guide",children:"Quick Start Guide"}),"\n",(0,s.jsx)("img",{src:t(5904).A}),"\n",(0,s.jsx)(n.h4,{id:"step-1-clone-the-template-spreadsheet",children:"Step 1: Clone the Template Spreadsheet"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Open the ",(0,s.jsx)(n.a,{href:"https://docs.google.com/spreadsheets/d/1DyTIgucTDzBQaBMGOolT4mbS2Mlv45b2gbzU8aisvpw/edit?usp=sharing",children:"OpenAlgo Trading Template"})]}),"\n",(0,s.jsx)(n.li,{children:'Click "File" > "Make a copy" to create a duplicate of the spreadsheet.'}),"\n",(0,s.jsx)(n.li,{children:'In the "Make a copy" dialog, enter a name for your copy of the spreadsheet, such as "My OpenAlgo Trading Sheet".'}),"\n",(0,s.jsx)(n.li,{children:'Ensure the "Folder" is set to your desired location, such as "My Drive".'}),"\n",(0,s.jsx)(n.li,{children:'Click the "Make a copy" button to create the new spreadsheet.'}),"\n"]}),"\n",(0,s.jsx)("img",{src:t(4388).A}),"\n",(0,s.jsx)(n.h4,{id:"step-2-configure-api-settings",children:"Step 2: Configure API Settings"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Open the cloned spreadsheet"}),"\n",(0,s.jsx)(n.li,{children:"Go to Extensions > AppScript editor"}),"\n",(0,s.jsx)(n.li,{children:"Locate these lines in the script:"}),"\n",(0,s.jsx)(n.li,{}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'var apikey = "<your-openalgo-apikey>";\nvar hostServer = "https://your-ngrok-domain.ngrok-free.app"; \n'})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsxs)(n.li,{children:["Replace with your OpenAlgo credentials:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"apikey"}),": Your unique OpenAlgo API key"]}),"\n",(0,s.jsx)(n.li,{children:"HostSefver: Your Custom Domain or Free Ngrok Domain where OpenAlgo is hosted"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"spreadsheet-structure",children:"Spreadsheet Structure"}),"\n",(0,s.jsx)(n.p,{children:"The template contains two main sheets:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PlaceOrder"}),": For entering trade details"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Logs"}),": Automatic logging of trade orders"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"PlaceOrder Sheet Columns"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Column"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Example"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"C3"}),(0,s.jsx)(n.td,{children:"Exchange"}),(0,s.jsx)(n.td,{children:"NSE, BSE, NFO, MCX, CDS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"D3"}),(0,s.jsx)(n.td,{children:"OpenAlgo Symbol"}),(0,s.jsx)(n.td,{children:"INFY, RELIANCE"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"E3"}),(0,s.jsx)(n.td,{children:"Action"}),(0,s.jsx)(n.td,{children:"BUY/SELL"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"F3"}),(0,s.jsx)(n.td,{children:"Price Type"}),(0,s.jsx)(n.td,{children:"MARKET/LIMIT/SL/SL-M"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"G3"}),(0,s.jsx)(n.td,{children:"Total Quantity"}),(0,s.jsx)(n.td,{children:"100"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"H3"}),(0,s.jsx)(n.td,{children:"Price"}),(0,s.jsx)(n.td,{children:"1500.50 (for LIMIT/STOP)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"I3"}),(0,s.jsx)(n.td,{children:"Trigger Price"}),(0,s.jsx)(n.td,{children:"1480.00 (for STOP)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"J3"}),(0,s.jsx)(n.td,{children:"Split Size"}),(0,s.jsx)(n.td,{children:(0,s.jsxs)("p",{children:["0 - No SplitOrder",(0,s.jsx)("br",{}),"Specific Number - Send Split order  with split size quantity"]})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"K3"}),(0,s.jsx)(n.td,{children:"Product Type"}),(0,s.jsx)(n.td,{children:"INTRADAY/DELIVERY"})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"split-order-functionality",children:"Split Order Functionality"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Split Size 0"}),": Entire quantity in one order"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Split Size > 0"}),": Multiple orders of specified size"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"execution",children:"Execution"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Fill in trade details in the PlaceOrder sheet"}),"\n",(0,s.jsx)(n.li,{children:"Press the PlaceOrder function"}),"\n",(0,s.jsx)(n.li,{children:"Check response in cell C9"}),"\n",(0,s.jsx)(n.li,{children:"View detailed logs in the Logs sheet"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'function openalgo() {\n  var apikey = "<your-openalgo-apikey>"; // Replace with your OpenAlgo API key\n  var hostServer = "https://your-ngrok-domain.ngrok-free.app"; // REPLACE WITH YOUR HOST SERVER\n  \n  var baseUrl = hostServer + "/api/v1/splitorder"; // Constructed base URL\n\n  \n  // Fetching parameters from the active sheet\n  var strategy = "Google Sheet";\n  var exchange = SpreadsheetApp.getActiveSheet().getRange(\'C3\').getValue();\n  var symbol = SpreadsheetApp.getActiveSheet().getRange(\'D3\').getValue();\n  var action = SpreadsheetApp.getActiveSheet().getRange(\'E3\').getValue();\n  var pricetype = SpreadsheetApp.getActiveSheet().getRange(\'F3\').getValue();\n  var quantity = SpreadsheetApp.getActiveSheet().getRange(\'G3\').getValue().toString();\n  var price = SpreadsheetApp.getActiveSheet().getRange(\'H3\').getValue().toString();\n  var trigger_price = SpreadsheetApp.getActiveSheet().getRange(\'I3\').getValue().toString();\n  var splitsize = SpreadsheetApp.getActiveSheet().getRange(\'J3\').getValue().toString();\n  var product = SpreadsheetApp.getActiveSheet().getRange(\'K3\').getValue();\n\n  // Modify payload based on splitsize\n  var payload = {\n    "apikey": apikey,\n    "strategy": strategy,\n    "exchange": exchange,\n    "symbol": symbol,\n    "action": action,\n    "quantity": splitsize === "0" ? quantity : quantity,\n    "splitsize": splitsize === "0" ? quantity : splitsize,\n    "pricetype": pricetype,\n    "product": product,\n    "price": price,\n    "trigger_price": trigger_price\n  };\n\n  Logger.log("Request Payload: " + JSON.stringify(payload)); // Log request payload\n\n  // Sending the split order request\n  var response = sendSplitOrder(baseUrl, payload);\n\n  // Format the response for frontend\n  var formattedResponse = formatResponse(response);\n\n  Logger.log("Formatted Response: " + formattedResponse); // Log formatted response\n\n  // Update the response in the sheet with formatted response\n  SpreadsheetApp.getActiveSpreadsheet().getSheetByName("PlaceOrder").getRange(\'C9\').setValue(formattedResponse);\n  \n  // Log order details\n  logSplitOrder(response, strategy, exchange, symbol, action, pricetype, quantity, product, price, trigger_price);\n\n  return formattedResponse;\n}\n\nfunction formatResponse(response) {\n  try {\n    var parsedResponse = JSON.parse(response);\n    \n    // If response is successful\n    if (parsedResponse.status === "success") {\n      var results = parsedResponse.results;\n      \n      // Format the response for frontend display\n      var formattedLines = [\n        "Order Placement Status: " + parsedResponse.status.toUpperCase(),\n        "Total Orders: " + results.length\n      ];\n      \n      // Add details for each order\n      results.forEach(function(order, index) {\n        formattedLines.push(\n          "Order " + (index + 1) + ":",\n          "  Order ID: " + order.orderid,\n          "  Quantity: " + order.quantity,\n          "  Status: " + order.status\n        );\n      });\n      \n      return formattedLines.join("\\n");\n    } else {\n      // Handle error response\n      return "Order Placement Failed:\\n" + \n             "Error Status: " + parsedResponse.status + "\\n" +\n             "Error Message: " + (parsedResponse.message || "Unknown error");\n    }\n  } catch (e) {\n    // Handle parsing error\n    return "Error Formatting Response:\\n" + e.message;\n  }\n}\n\nfunction sendSplitOrder(url, payload) {\n  try {\n    var options = {\n      \'method\': \'post\',\n      \'contentType\': \'application/json\',\n      \'payload\': JSON.stringify(payload)\n    };\n\n    var result = UrlFetchApp.fetch(url, options);\n    return result.getContentText();\n  } catch (e) {\n    Logger.log("Error sending split order: " + e.message);\n    return JSON.stringify({\n      status: "error",\n      message: e.message\n    });\n  }\n}\n\nfunction logSplitOrder(response, strategy, exchange, symbol, action, pricetype, quantity, product, price, trigger_price) {\n  try {\n    var parsedResponse = JSON.parse(response);\n    if (parsedResponse.status === "success") {\n      var results = parsedResponse.results;\n      var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Logs");\n\n      results.forEach(function(order) {\n        var row = [\n          strategy,\n          exchange,\n          symbol,\n          action,\n          pricetype,\n          quantity,\n          product,\n          order.orderid,\n          order.quantity,\n          order.status,\n          price,\n          trigger_price,\n          new Date()\n        ];\n        sheet.appendRow(row);\n      });\n    } else {\n      Logger.log("Error in response: " + response);\n    }\n  } catch (e) {\n    Logger.log("Error logging split order: " + e.message);\n  }\n}\n\nfunction clearLogs() {\n  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Logs");\n  var lastRow = sheet.getLastRow();\n  if (lastRow > 1) {\n    sheet.getRange(2, 1, lastRow - 1, sheet.getLastColumn()).clearContent();\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h4,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"API Key Invalid"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify key in OpenAlgo dashboard"}),"\n",(0,s.jsx)(n.li,{children:"Check network connectivity"}),"\n",(0,s.jsx)(n.li,{children:"Ensure API key has trading permissions"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Host URL Incorrect"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Confirm exact URL from OpenAlgo platform"}),"\n",(0,s.jsx)(n.li,{children:"Check for any trailing slashes"}),"\n",(0,s.jsx)(n.li,{children:"Verify ngrok or custom endpoint"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Permissions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Accept Google Sheets script permissions"}),"\n",(0,s.jsx)(n.li,{children:"Verify API key authorization"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"security-notes",children:"Security Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Keep API key confidential"}),"\n",(0,s.jsx)(n.li,{children:"Use secure, unique API keys"}),"\n",(0,s.jsx)(n.li,{children:"Regularly rotate credentials"}),"\n",(0,s.jsx)(n.li,{children:"Monitor trading activities"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},4388:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/Screenshot 2024-12-19 at 12.01.10\u202fAM-196647d9fdb56f0b12bf5e8f6c608cc0.png"},5904:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/Screenshot 2024-12-19 at 12.05.18\u202fAM-a4377cbb980d410cb40d4e954c151842.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);