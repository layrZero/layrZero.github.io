"use strict";(self.webpackChunkscaffold=self.webpackChunkscaffold||[]).push([[5799],{8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>t});var a=n(6540);const i={},s=a.createContext(i);function l(e){const r=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(s.Provider,{value:r},e.children)}},9212:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"trading-platform/metatrader-5/openalgo-mql5-functions","title":"OpenAlgo MQL5 Functions","description":"Below is the API documentation for the OpenAlgoAPI functions provided in your MQL5 header file:","source":"@site/docs/trading-platform/metatrader-5/openalgo-mql5-functions.md","sourceDirName":"trading-platform/metatrader-5","slug":"/trading-platform/metatrader-5/openalgo-mql5-functions","permalink":"/docs/trading-platform/metatrader-5/openalgo-mql5-functions","draft":false,"unlisted":false,"editUrl":"https://github.com/layrZero/layrZero.github.io/tree/main/docs/trading-platform/metatrader-5/openalgo-mql5-functions.md","tags":[],"version":"current","frontMatter":{}}');var i=n(4848),s=n(8453);const l={},t="OpenAlgo MQL5 Functions",d={},o=[{value:"OpenAlgoAPI Function Documentation",id:"openalgoapi-function-documentation",level:2},{value:"<code>PlaceOrder</code>",id:"placeorder",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Usage:",id:"usage",level:4},{value:"<code>PlaceSmartOrder</code>",id:"placesmartorder",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Usage:",id:"usage-1",level:4},{value:"<code>ModifyOrder</code>",id:"modifyorder",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Usage:",id:"usage-2",level:4},{value:"<code>CancelOrder</code>",id:"cancelorder",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Usage:",id:"usage-3",level:4},{value:"<code>ClosePosition</code>",id:"closeposition",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Usage:",id:"usage-4",level:4},{value:"<code>CancelAllOrders</code>",id:"cancelallorders",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"Usage:",id:"usage-5",level:4}];function c(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"openalgo-mql5-functions",children:"OpenAlgo MQL5 Functions"})}),"\n",(0,i.jsx)(r.p,{children:"Below is the API documentation for the OpenAlgoAPI functions provided in your MQL5 header file:"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"openalgoapi-function-documentation",children:"OpenAlgoAPI Function Documentation"}),"\n",(0,i.jsx)(r.h3,{id:"placeorder",children:(0,i.jsx)(r.code,{children:"PlaceOrder"})}),"\n",(0,i.jsx)(r.p,{children:"Places an order with the specified parameters by sending a POST request to the OpenAlgo API."}),"\n",(0,i.jsx)(r.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"actionParam"}),': The trade action, either "BUY" or "SELL".']}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"quantityParam"}),": The quantity of the asset to trade."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"apiUrlParam"}),": The URL of the OpenAlgo API."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"apiKeyParam"}),": The API key for authentication with OpenAlgo."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"strategyParam"}),": The name of the trading strategy."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"symbolParam"}),": The symbol for the asset being traded."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"exchangeParam"}),": The exchange on which the trade will be executed."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"productParam"}),": The product type of the order."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"priceTypeParam"}),": The price type of the order."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"priceParam"})," (optional): The price at which to place the order."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"triggerPriceParam"})," (optional): The trigger price for stop-loss or stop-limit orders."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"disclosedQuantityParam"})," (optional): The disclosed quantity of the order."]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"usage",children:"Usage:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-mql5",children:'PlaceOrder("BUY", 10, "http://127.0.0.1:5000", "your_api_key", "Meta Strategy", "SBIN-EQ", NSE, MIS, MARKET);\n'})}),"\n",(0,i.jsx)(r.h3,{id:"placesmartorder",children:(0,i.jsx)(r.code,{children:"PlaceSmartOrder"})}),"\n",(0,i.jsx)(r.p,{children:"Places an order that considers the current open position size and matches the position size given in the position book."}),"\n",(0,i.jsx)(r.h4,{id:"parameters-1",children:"Parameters:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Inherits all parameters from ",(0,i.jsx)(r.code,{children:"PlaceOrder"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"positionSizeParam"}),": The size of the position to be matched for the order."]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"usage-1",children:"Usage:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-mql5",children:'PlaceSmartOrder("SELL", 5, 10, "http://127.0.0.1:5000", "your_api_key", "ReversalStrategy", "TATASTEEL-EQ", NSE, MIS, LIMIT, 150.00);\n'})}),"\n",(0,i.jsx)(r.h3,{id:"modifyorder",children:(0,i.jsx)(r.code,{children:"ModifyOrder"})}),"\n",(0,i.jsx)(r.p,{children:"Modifies an existing order with new parameters."}),"\n",(0,i.jsx)(r.h4,{id:"parameters-2",children:"Parameters:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Inherits all parameters from ",(0,i.jsx)(r.code,{children:"PlaceOrder"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"orderidParam"}),": The ID of the order to be modified."]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"usage-2",children:"Usage:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-mql5",children:'ModifyOrder("123456789", "BUY", 10, 155.00, "http://127.0.0.1:5000", "your_api_key", "Meta Strategy", "YESBANK-EQ", NSE, CNC, LIMIT);\n'})}),"\n",(0,i.jsx)(r.h3,{id:"cancelorder",children:(0,i.jsx)(r.code,{children:"CancelOrder"})}),"\n",(0,i.jsx)(r.p,{children:"Cancels an existing order."}),"\n",(0,i.jsx)(r.h4,{id:"parameters-3",children:"Parameters:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"orderidParam"}),": The ID of the order to be canceled."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"apiUrlParam"}),": The URL of the OpenAlgo API."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"apiKeyParam"}),": The API key for authentication with OpenAlgo."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"strategyParam"}),": The name of the trading strategy."]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"usage-3",children:"Usage:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-mql5",children:'CancelOrder("123456789", "http://127.0.0.1:5000", "your_api_key", "Meta Strategy");\n'})}),"\n",(0,i.jsx)(r.h3,{id:"closeposition",children:(0,i.jsx)(r.code,{children:"ClosePosition"})}),"\n",(0,i.jsx)(r.p,{children:"Closes all open positions associated with a given strategy."}),"\n",(0,i.jsx)(r.h4,{id:"parameters-4",children:"Parameters:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"apiUrlParam"}),": The URL of the OpenAlgo API."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"apiKeyParam"}),": The API key for authentication with OpenAlgo."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"strategyParam"}),": The name of the trading strategy to close positions for."]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"usage-4",children:"Usage:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-mql5",children:'ClosePosition("http://127.0.0.1:5000", "your_api_key", "Meta Strategy");\n'})}),"\n",(0,i.jsx)(r.h3,{id:"cancelallorders",children:(0,i.jsx)(r.code,{children:"CancelAllOrders"})}),"\n",(0,i.jsx)(r.p,{children:"Cancels all orders associated with a given strategy."}),"\n",(0,i.jsx)(r.h4,{id:"parameters-5",children:"Parameters:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"apiUrlParam"}),": The URL of the OpenAlgo API."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"apiKeyParam"}),": The API key for authentication with OpenAlgo."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"strategyParam"}),": The name of the trading strategy to cancel orders for."]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"usage-5",children:"Usage:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-mql5",children:'CancelAllOrders("http://127.0.0.1:5000", "your_api_key", "Meta Strategy");\n'})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Note"}),": Replace placeholder values like ",(0,i.jsx)(r.code,{children:'"your_api_key"'})," and ",(0,i.jsx)(r.code,{children:'"http://127.0.0.1:5000"'})," with actual API keys and URLs as required by your setup. All functions assume the existence of a network communication setup within the MetaTrader 5 environment, as well as an OpenAlgo API that responds to the specified endpoints. Ensure proper error handling and API rate limiting as per the service provider's specifications."]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);