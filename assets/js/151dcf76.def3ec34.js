"use strict";(self.webpackChunkscaffold=self.webpackChunkscaffold||[]).push([[3226],{1959:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"trading-platform/amibroker/button-trading-module-modern","title":"Button Trading Module (Modern)","description":"This AmiBroker order pad lets you place instant BUY or SELL orders directly from your chart using OpenAlgo. Just enter your OpenAlgo API key (from your OpenAlgo app), fill in the symbol, quantity, product type (MIS/CNC/NRML), and exchange (like NSE), then click the green BUY or red SELL button. Make sure OpenAlgo is running.","source":"@site/docs/trading-platform/amibroker/button-trading-module-modern.md","sourceDirName":"trading-platform/amibroker","slug":"/trading-platform/amibroker/button-trading-module-modern","permalink":"/docs/trading-platform/amibroker/button-trading-module-modern","draft":false,"unlisted":false,"editUrl":"https://github.com/layrZero/layrZero.github.io/tree/main/docs/trading-platform/amibroker/button-trading-module-modern.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"AmiQuotes","permalink":"/docs/trading-platform/amibroker/amiquotes"},"next":{"title":"Button Trading Module","permalink":"/docs/trading-platform/amibroker/button-trading-module-old"}}');var o=t(4848),i=t(8453);const l={},s="Button Trading Module (Modern)",a={},d=[];function c(n){const e={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"button-trading-module-modern",children:"Button Trading Module (Modern)"})}),"\n",(0,o.jsxs)(e.p,{children:["This AmiBroker order pad lets you place ",(0,o.jsx)(e.strong,{children:"instant BUY or SELL orders directly from your chart"})," using OpenAlgo. Just enter your ",(0,o.jsx)(e.strong,{children:"OpenAlgo API key"})," (from your OpenAlgo app), fill in the ",(0,o.jsx)(e.strong,{children:"symbol, quantity, product type (MIS/CNC/NRML), and exchange (like NSE)"}),", then click the green BUY or red SELL button. Make sure ",(0,o.jsx)(e.strong,{children:"OpenAlgo is running."})]}),"\n",(0,o.jsxs)(e.p,{children:["All orders are ",(0,o.jsx)(e.strong,{children:"market orders"})," sent immediately, and you can see the detailed request and response in the AmiBroker ",(0,o.jsx)(e.strong,{children:"Trace Window"})," for full transparency."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-clike",children:'///Rajandran R - Creator of OpenAlgo\n//website - openalgo.in / marketcalls.in\n//OpenAlgo - Amibroker Button Trading Module (Modern) v1.0\n//Date - 03/07/2025\n_SECTION_BEGIN("OpenAlgo Button Trading Module (Modern)");\n\n//Note : This Amibroker AFL Works only on 6.35 or higher version only.\n\n/* -----------------Globals-----------------------------------------------  */\nglobal _x0, _y0, IDset;\n_x0   = 20;\n_y0   = 20;\nIDset = 0;\n\nDT_CENTER  = 1;\nDT_VCENTER = 4 | 32;\nRequestTimedRefresh( 1, False );\n\n/* ---------------- helper ------------------------------------------------ */\nprocedure GfxSetColors( fg, bg )\n{\n    GfxSetTextColor( fg );  GfxSetBkColor( bg );\n    GfxSelectPen( fg );     GfxSelectSolidBrush( bg );\n}\n\nfunction PointInside( px, py, x, y, w, h )\n{\n    x += _x0;  y += _y0;\n    return ( px>=x AND px<=x+w AND py>=y AND py<=y+h );\n}\n\n/* --------------------------------------------------------------------------\n   LeftClickInside \u2013 single-return version\n   -------------------------------------------------------------------------- */\nfunction LeftClickInside( x, y, w, h )\n{\n    /* default = NO click */\n    hit = False;                         // ? initialise return flag (scalar)\n\n    mb  = GetCursorMouseButtons();       //   current mouse-button state\n    if ( mb & 8 )                        //   8 = left button pressed\n    {\n        px = GetCursorXPosition( 1 );    //   cursor X (pixels)\n        py = GetCursorYPosition( 1 );    //   cursor Y (pixels)\n\n        /* set flag only if pointer is inside the rectangle */\n        if ( PointInside( px, py, x, y, w, h ) )\n            hit = True;\n    }\n\n    /* SINGLE exit-point */\n    return hit;                          // always one scalar value\n}\n\n/* ---------------- Static-var state helpers ------------------------------ */\nfunction _GetState( id ){ return Nz( StaticVarGet("GFX_"+id+GetChartID()),0 ); }\nprocedure _SetState( id, v ){ StaticVarSet("GFX_"+id+GetChartID(),v); }\n\n/* -----------------------  GfxSelect  (patched) -------------------------- */\nfunction GfxSelect( id, csv, x, y, w, h, fg, bg )\n{\n    x += _x0;  y += _y0;\n\n    s  = _GetState( id );   if( s == 0 ) s = -1;        // closed initially\n    cnt= StrCount( csv, "," ) + 1;\n\n    /* mouse */\n    if( s < 0 )                               // closed \u2013 header only\n    {\n        if( LeftClickInside( x-_x0, y-_y0, w, h ) ) s = -s;      // open\n    }\n    else                                      // open\n    {\n        // ***** PATCHED LINE *****\n        if( LeftClickInside( x-_x0, y-_y0, w, (cnt+1)*h ) )\n        {\n            py = GetCursorYPosition(1);\n            idx= round( 0.5 + ( py-(y-_y0) )/h );\n            if( idx>1 ) s = -(idx-1); else s = -s;\n        }\n    }\n    _SetState( id, s );\n\n    sel = abs(s) - 1;                         // 0-based index\n\n    /* draw */\n    GfxSetColors( fg, bg );\n    GfxRoundRect( x, y, x+w, y+h, 5, 5 );\n    GfxDrawText( StrExtract(csv,sel), x,y,x+w,y+h, DT_CENTER|DT_VCENTER );\n\n    if( s > 0 )\n    {\n        GfxSetColors( bg, fg );\n        for( i = 0; i < cnt; i++ )\n        {\n            yy = y + (i+1)*h;\n            GfxRectangle( x, yy, x+w, yy+h );\n            GfxDrawText( StrExtract(csv,i), x,yy,x+w,yy+h,\n                         DT_CENTER|DT_VCENTER );\n        }\n    }\n    return sel;                               // ONE return\n}\n\n/* ------------------ OpenAlgo HTTP poster (unchanged) ------------------- */\nfunction PostOA( host, act, qty, apiKey, sym, exch, iprod )\n{\n    url  = host + "/api/v1/placeorder";\n    body = "{\\"apikey\\":\\""+apiKey+"\\","+\n           "\\"strategy\\":\\"Amibroker\\","+\n           "\\"symbol\\":\\""+sym+"\\","+\n           "\\"action\\":\\""+act+"\\","+\n           "\\"exchange\\":\\""+exch+"\\","+\n           "\\"pricetype\\":\\"MARKET\\","+\n           "\\"product\\":\\""+iprod+"\\","+\n           "\\"quantity\\":\\""+qty+"\\"}";\n\n    _TRACEF("OpenAlgo request : %s",body);\n\n    InternetSetHeaders("Content-Type: application/json\\r\\n");\n    ih = InternetPostRequest(url,body);\n    if( ih )\n    {\n        rsp = "";\n        while( ( iln = InternetReadString(ih) ) != "" ) rsp += iln;\n        _TRACEF("OpenAlgo response: %s",rsp);\n        InternetClose(ih);\n    }\n    else _TRACE("OpenAlgo HTTP post failed");\n    return 0;\n}\n\n\n/*---------------------------------------------------------------------------\n      VERSION CHECK  (GUI code only if >= 6.35)\n---------------------------------------------------------------------------*/\nReqVer = 6.35;\nif ( Version() < ReqVer )\n{\n    /* old release \u2013 show banner, nothing more */\n    SetChartOptions(0,chartShowDates);\n    GfxSetBkColor(colorBlack);\n    GfxSetTextColor(colorRed);\n    GfxSelectFont("Arial",16,700);\n    GfxTextOut("This AFL needs AmiBroker 6.35 or later",40,40);\n}\n\n/*---------------------------------------------------------------------------\n      Amibroker GUI and GFX Controls to Place Order in OpenAlgo\n---------------------------------------------------------------------------*/\n\nelse \n{\n\n/* ----------------------------- Layout ---------------------------------- */\nrow  = 35; lblW = 60; gap = 7; tbW = 210; ddW = 110; btnW = 90; btnH = 30;\nGfxSetTextColor(colorWhite); GfxSetBkColor(colorBlack);\n\n/* Host */\nGfxDrawText("Host",_x0,_y0,_x0+lblW,_y0+row,DT_VCENTER);\nrc = GuiEdit(++IDset,_x0+lblW+gap,_y0,tbW,25,notifyEditChange);\nif(rc==guiNew)GuiSetText("http://127.0.0.1:5000",IDset);\nhostURL = GuiGetText(IDset);\n\n/* Buttons (top-right) */\nbtnY  = _y0;\nbtnBX = _x0+lblW+gap+tbW+40;\nGuiButton("BUY" ,++IDset,btnBX       ,btnY,btnW,btnH,notifyClicked); buyID = IDset;\nGuiButton("SELL",++IDset,btnBX+btnW+20,btnY,btnW,btnH,notifyClicked); sellID= IDset;\nGuiSetColors(buyID ,buyID ,1,colorWhite,colorGreen,colorWhite);\nGuiSetColors(sellID,sellID,1,colorWhite,colorRed ,colorWhite);\n\n/* API key */\nyy = _y0+row;\nGfxDrawText("API Key",_x0,yy,_x0+lblW,yy+row,DT_VCENTER);\nrc = GuiEdit(++IDset,_x0+lblW+gap,yy,tbW,25,notifyEditChange);\nif(rc==guiNew)GuiSetText("******",IDset);\napiKey = GuiGetText(IDset);\n\n/* Symbol */\nyy += row;\nGfxDrawText("Symbol",_x0,yy,_x0+lblW,yy+row,DT_VCENTER);\nrc = GuiEdit(++IDset,_x0+lblW+gap,yy,tbW,25,notifyEditChange);\nif(rc==guiNew)GuiSetText("RELIANCE",IDset);\nsymbol = GuiGetText(IDset);\n\n/* Quantity */\nyy += row;\nGfxDrawText("Qty",_x0,yy,_x0+lblW,yy+row,DT_VCENTER);\nrc = GuiEdit(++IDset,_x0+lblW+gap,yy,80,25,notifyEditChange);\nif(rc==guiNew)GuiSetText("1",IDset);\nqtyVal = StrToNum(GuiGetText(IDset));\n\n/* Product & Exchange */\nyy += row;\niprodIdx = GfxSelect("iprod","MIS,CNC,NRML",\n                     _x0+lblW+gap,yy,ddW,28,colorWhite,colorRed);\nexchIdx  = GfxSelect("exch" ,"NSE,NFO,BSE,BFO,MCX,CDS",\n                     _x0+lblW+gap+ddW+20,yy,ddW+25,28,colorWhite,colorBlue);\n\niprod    = StrExtract("MIS,CNC,NRML",iprodIdx);\nexchange = StrExtract("NSE,NFO,BSE,BFO,MCX,CDS",exchIdx);\n\n/* -------------------- event loop -------------------- */\nfor( i=0;(cid=GuiGetEvent(i,0))>0;i++ )\n{\n    if( GuiGetEvent(i,1) == notifyClicked )\n    {\n        if( cid == buyID )\n            PostOA(hostURL,"BUY" ,qtyVal,apiKey,symbol,exchange,iprod);\n        if( cid == sellID )\n            PostOA(hostURL,"SELL",qtyVal,apiKey,symbol,exchange,iprod);\n    }\n}\n\n\n\n/* Chart */\nSetChartOptions(0,chartShowArrows|chartShowDates);\nPlot(Close,"Price",colorDefault,styleCandle);\n_N( Title = StrFormat("{{NAME}} - {{INTERVAL}} {{DATE}}  O %g H %g L %g C %g (%.1f%%)  "\n       +"Qty %g  iprod %s  Exch %s",\n       O,H,L,C,SelectedValue(ROC(C,1)),qtyVal,iprod,exchange));\n}\n_SECTION_END();\n\n'})})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>s});var r=t(6540);const o={},i=r.createContext(o);function l(n){const e=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:l(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);